(function (e) { if (typeof bootstrap === "function") { bootstrap("promise", e) } else if (typeof exports === "object") { module.exports = e() } else if (typeof define === "function" && define.amd) { define(e) } else if (typeof ses !== "undefined") { if (!ses.ok()) { return } else { ses.makeQ = e } } else { Q = e() } })(function () { "use strict"; function i(e) { var t = Function.call; return function () { return t.apply(e, arguments) } } function p(e) { return h(e) === "[object StopIteration]" || e instanceof d } function m(e, t) { if (t.stack && typeof e === "object" && e !== null && e.stack && e.stack.indexOf(v) === -1) { e.stack = g(e.stack) + "\n" + v + "\n" + g(t.stack) } } function g(e) { var t = e.split("\n"); var n = []; for (var r = 0; r < t.length; ++r) { var i = t[r]; if (!b(i) && !y(i)) { n.push(i) } } return n.join("\n") } function y(e) { return e.indexOf("(module.js:") !== -1 || e.indexOf("(node.js:") !== -1 } function b(n) { var r = /at .+ \((.*):(\d+):\d+\)/.exec(n); if (!r) { return false } var i = r[1]; var s = r[2]; return i === t && s >= e && s <= pt } function w() { if (Error.captureStackTrace) { var e, n; var r = Error.prepareStackTrace; Error.prepareStackTrace = function (t, r) { e = r[1].getFileName(); n = r[1].getLineNumber() }; (new Error).stack; Error.prepareStackTrace = r; t = e; return n } } function E(e) { return j(e) } function S() { function a(i) { n = i; o(e, function (e, t) { r(function () { i.promiseDispatch.apply(i, t) }) }, void 0); e = void 0; t = void 0 } var e = [], t = [], n; var i = f(S.prototype); var u = f(T.prototype); u.promiseDispatch = function (i, o, u) { var a = s(arguments); if (e) { e.push(a); if (o === "when" && u[1]) { t.push(u[1]) } } else { r(function () { n.promiseDispatch.apply(n, a) }) } }; u.valueOf = function () { if (e) { return u } var t = N(n); if (C(t)) { n = t } return t }; if (Error.captureStackTrace && E.longStackJumpLimit > 0) { Error.captureStackTrace(u, S); u.stack = u.stack.substring(u.stack.indexOf("\n") + 1) } i.promise = u; i.resolve = function (e) { if (n) { return } a(j(e)) }; i.fulfill = function (e) { if (n) { return } a(B(e)) }; i.reject = function (e) { if (n) { return } a(H(e)) }; i.notify = function (e) { if (n) { return } o(t, function (t, n) { r(function () { n(e) }) }, void 0) }; return i } function x(e) { if (typeof e !== "function") { throw new TypeError("resolver must be a function.") } var t = S(); Q(e, t.resolve, t.reject, t.notify).fail(t.reject); return t.promise } function T(e, t, n, r, i) { if (t === void 0) { t = function (e) { return H(new Error("Promise does not support operation: " + e)) } } var s = f(T.prototype); s.promiseDispatch = function (n, r, i) { var o; try { if (e[r]) { o = e[r].apply(s, i) } else { o = t.call(s, r, i) } } catch (u) { o = H(u) } if (n) { n(o) } }; if (n) { s.valueOf = n } if (i) { s.exception = r } return s } function N(e) { if (C(e)) { return e.valueOf() } return e } function C(e) { return e && typeof e.promiseDispatch === "function" } function k(e) { return e && typeof e.then === "function" } function L(e) { return !A(e) && !O(e) } function A(e) { return !k(N(e)) } function O(e) { e = N(e); return C(e) && "exception" in e } function P() { if (!D && typeof window !== "undefined" && !window.Touch && window.console) { console.warn("[Q] Unhandled rejection reasons (should be empty):", M) } D = true } function H(e) { var t = T({ when: function (t) { if (t) { var n = u(_, this); if (n !== -1) { _.splice(n, 1); M.splice(n, 1) } } return t ? t(e) : this } }, function () { return H(e) }, function n() { return this }, e, true); P(); _.push(t); M.push(e); return t } function B(e) { return T({ when: function () { return e }, get: function (t) { return e[t] }, set: function (t, n) { e[t] = n }, "delete": function (t) { delete e[t] }, post: function (t, n) { if (t === null || t === void 0) { return e.apply(void 0, n) } else { return e[t].apply(e, n) } }, apply: function (t, n) { return e.apply(t, n) }, keys: function () { return c(e) } }, void 0, function t() { return e }) } function j(e) { if (C(e)) { return e } e = N(e); if (k(e)) { return F(e) } else { return B(e) } } function F(e) { var t = S(); r(function () { try { e.then(t.resolve, t.reject, t.notify) } catch (n) { t.reject(n) } }); return t.promise } function I(e) { return T({ isDef: function () { } }, function (n, r) { return X(e, n, r) }, function () { return N(e) }) } function q(e, t, n, i) { function u(e) { try { return typeof t === "function" ? t(e) : e } catch (n) { return H(n) } } function a(e) { if (typeof n === "function") { m(e, l); try { return n(e) } catch (t) { return H(t) } } return H(e) } function f(e) { return typeof i === "function" ? i(e) : e } var s = S(); var o = false; var l = j(e); r(function () { l.promiseDispatch(function (e) { if (o) { return } o = true; s.resolve(u(e)) }, "when", [function (e) { if (o) { return } o = true; s.resolve(a(e)) }]) }); l.promiseDispatch(void 0, "when", [void 0, function (e) { var t; var n = false; try { t = f(e) } catch (r) { n = true; if (E.onerror) { E.onerror(r) } else { throw r } } if (!n) { s.notify(t) } }]); return s.promise } function R(e, t, n) { return q(e, function (e) { return Y(e).then(function (e) { return t.apply(void 0, e) }, n) }, n) } function U(e) { return function () { function t(e, t) { var s; try { s = n[e](t) } catch (o) { if (p(o)) { return o.value } else { return H(o) } } return q(s, r, i) } var n = e.apply(this, arguments); var r = t.bind(t, "send"); var i = t.bind(t, "throw"); return r() } } function z(e) { throw new d(e) } function W(e) { return function () { return R([this, Y(arguments)], function (t, n) { return e.apply(t, n) }) } } function X(e, t, n) { var i = S(); r(function () { j(e).promiseDispatch(i.resolve, t, n) }); return i.promise } function V(e) { return function (t) { var n = s(arguments, 1); return X(t, e, n) } } function J(e, t) { var n = s(arguments, 2); return $(e, t, n) } function K(e, t) { return X(e, "apply", [void 0, t]) } function Q(e) { var t = s(arguments, 1); return K(e, t) } function G(e) { var t = s(arguments, 1); return function () { var r = t.concat(s(arguments)); return X(e, "apply", [this, r]) } } function Y(e) { return q(e, function (e) { var t = 0; var n = S(); o(e, function (r, i, s) { if (A(i)) { e[s] = N(i) } else { ++t; q(i, function (r) { e[s] = r; if (--t === 0) { n.resolve(e) } }, n.reject) } }, void 0); if (t === 0) { n.resolve(e) } return n.promise }) } function Z(e) { return q(e, function (e) { e = a(e, j); return q(Y(a(e, function (e) { return q(e, n, n) })), function () { return e }) }) } function et(e, t) { return q(e, void 0, t) } function tt(e, t) { return q(e, void 0, void 0, t) } function nt(e, t) { return q(e, function (e) { return q(t(), function () { return e }) }, function (e) { return q(t(), function () { return H(e) }) }) } function rt(e, t, n, i) { var s = function (t) { r(function () { m(t, e); if (E.onerror) { E.onerror(t) } else { throw t } }) }; var o = t || n || i ? q(e, t, n, i) : e; if (typeof process === "object" && process && process.domain) { s = process.domain.bind(s) } et(o, s) } function it(e, t, n) { var r = S(); var i = setTimeout(function () { r.reject(new Error(n || "Timed out after " + t + " ms")) }, t); q(e, function (e) { clearTimeout(i); r.resolve(e) }, function (e) { clearTimeout(i); r.reject(e) }, r.notify); return r.promise } function st(e, t) { if (t === void 0) { t = e; e = void 0 } var n = S(); q(e, undefined, undefined, n.notify); setTimeout(function () { n.resolve(e) }, t); return n.promise } function ot(e, t) { var n = s(t); var r = S(); n.push(r.makeNodeResolver()); K(e, n).fail(r.reject); return r.promise } function ut(e) { var t = s(arguments, 1); var n = S(); t.push(n.makeNodeResolver()); K(e, t).fail(n.reject); return n.promise } function at(e) { var t = s(arguments, 1); return function () { var n = t.concat(s(arguments)); var r = S(); n.push(r.makeNodeResolver()); K(e, n).fail(r.reject); return r.promise } } function ft(e, t) { var n = s(arguments, 2); return function () { function o() { return e.apply(t, arguments) } var r = n.concat(s(arguments)); var i = S(); r.push(i.makeNodeResolver()); K(o, r).fail(i.reject); return i.promise } } function lt(e, t, n) { var r = s(n || []); var i = S(); r.push(i.makeNodeResolver()); $(e, t, r).fail(i.reject); return i.promise } function ct(e, t) { var n = s(arguments, 2); var r = S(); n.push(r.makeNodeResolver()); $(e, t, n).fail(r.reject); return r.promise } function ht(e, t) { if (t) { e.then(function (e) { r(function () { t(null, e) }) }, function (e) { r(function () { t(e) }) }) } else { return e } } var e = w(); var t; var n = function () { }; var r; if (typeof setImmediate === "function") { if (typeof window !== "undefined") { r = setImmediate.bind(window) } else { r = setImmediate } } else if (typeof process !== "undefined" && process.nextTick) { r = process.nextTick } else { (function () { function a() { --i; if (++o >= n) { o = 0; n *= 4; var t = s && Math.min(s - 1, n); while (i < t) { ++i; u() } } while (s) { --s; e = e.next; var r = e.task; e.task = void 0; r() } o = 0 } var e = { task: void 0, next: null }; var t = e; var n = 2; var i = 0; var s = 0; var o = 0; var u = void 0; r = function (e) { t = t.next = { task: e, next: null }; if (i < ++s && i < n) { ++i; u() } }; if (typeof MessageChannel !== "undefined") { var f = new MessageChannel; f.port1.onmessage = a; u = function () { f.port2.postMessage(0) } } else { u = function () { setTimeout(a, 0) } } })() } var s = i(Array.prototype.slice); var o = i(Array.prototype.reduce || function (e, t) { var n = 0, r = this.length; if (arguments.length === 1) { do { if (n in this) { t = this[n++]; break } if (++n >= r) { throw new TypeError } } while (1) } for (; n < r; n++) { if (n in this) { t = e(t, this[n], n) } } return t }); var u = i(Array.prototype.indexOf || function (e) { for (var t = 0; t < this.length; t++) { if (this[t] === e) { return t } } return -1 }); var a = i(Array.prototype.map || function (e, t) { var n = this; var r = []; o(n, function (i, s, o) { r.push(e.call(t, s, o, n)) }, void 0); return r }); var f = Object.create || function (e) { function t() { } t.prototype = e; return new t }; var l = i(Object.prototype.hasOwnProperty); var c = Object.keys || function (e) { var t = []; for (var n in e) { if (l(e, n)) { t.push(n) } } return t }; var h = i(Object.prototype.toString); var d; if (typeof ReturnValue !== "undefined") { d = ReturnValue } else { d = function (e) { this.value = e } } E.longStackJumpLimit = 1; var v = "From previous event:"; E.nextTick = r; E.defer = S; S.prototype.makeNodeResolver = function () { var e = this; return function (t, n) { if (t) { e.reject(t) } else if (arguments.length > 2) { e.resolve(s(arguments, 1)) } else { e.resolve(n) } } }; E.promise = x; E.makePromise = T; T.prototype.then = function (e, t, n) { return q(this, e, t, n) }; T.prototype.thenResolve = function (e) { return q(this, function () { return e }) }; T.prototype.thenReject = function (e) { return q(this, function () { throw e }) }; o(["isFulfilled", "isRejected", "isPending", "dispatch", "when", "spread", "get", "set", "del", "delete", "post", "send", "invoke", "keys", "fapply", "fcall", "fbind", "all", "allResolved", "timeout", "delay", "catch", "finally", "fail", "fin", "progress", "done", "nfcall", "nfapply", "nfbind", "denodeify", "nbind", "npost", "nsend", "ninvoke", "nodeify"], function (e, t) { T.prototype[t] = function () { return E[t].apply(E, [this].concat(s(arguments))) } }, void 0); T.prototype.toSource = function () { return this.toString() }; T.prototype.toString = function () { return "[object Promise]" }; E.nearer = N; E.isPromise = C; E.isPromiseAlike = k; E.isPending = L; E.isFulfilled = A; E.isRejected = O; var M = E.unhandledReasons = []; var _ = []; var D = false; if (typeof process !== "undefined" && process.on) { process.on("exit", function () { for (var e = 0; e < M.length; e++) { var t = M[e]; if (t && typeof t.stack !== "undefined") { console.warn("Unhandled rejection reason:", t.stack) } else { console.warn("Unhandled rejection reason (no stack):", t) } } }) } E.reject = H; E.fulfill = B; E.resolve = j; E.master = I; E.when = q; E.spread = R; E.async = U; E["return"] = z; E.promised = W; E.dispatch = X; E.dispatcher = V; E.get = V("get"); E.set = V("set"); E["delete"] = E.del = V("delete"); var $ = E.post = V("post"); E.send = J; E.invoke = J; E.fapply = K; E["try"] = Q; E.fcall = Q; E.fbind = G; E.keys = V("keys"); E.all = Y; E.allResolved = Z; E["catch"] = E.fail = et; E.progress = tt; E["finally"] = E.fin = nt; E.done = rt; E.timeout = it; E.delay = st; E.nfapply = ot; E.nfcall = ut; E.nfbind = at; E.denodeify = E.nfbind; E.nbind = ft; E.npost = lt; E.nsend = ct; E.ninvoke = E.nsend; E.nodeify = ht; var pt = w(); return E })